This is the GPL version of the PyMca XRF Toolkit.
Please read the LICENSE.GPL file to know what that means.
 
That license grants you the rights to distribute this code under
the same license conditions. Nevertheless, you should keep using
sourceforge or the ESRF for downloading in order to keep up-to-date.


INSTALLATION

I remind you that ready-to-use packages are available for the most
common platforms. Please keep going if you want to build the code from
source.

In order to simplify the tasks, I have put all the .py modules together.
You will need to build some libraries (sps, specfile, specfit, edf, ...)
Those libraries can be build in the respective directories thru the usual
python setup.py build methods. Alternatively you can use the toplevel
setup.py contributed by D. Dale and install PyMca in a specific directory.

Examples of use:

1 - Install everything in default directories (typical for windows users or system
administrators):

python setup.py install

2 - Install to specific destinations (typical for posix systems):

python setup.py install --install-scripts SCRIPTS_DIRECTORY
python setup.py install --install-lib DESTINATION_DIRECTORY
python setup.py install --install-lib DESTINATION_DIRECTORY --install-scripts SCRIPTS_DIRECTORY

The directories have to be specified with their full path without the last "/".

In any case you need write privileges to the final directories.

3 - Creation of an easy to install windows binary using Visual Studio 2003 (or 
Visual Studio 2008 if under Python 2.6)

python setup.py bdist_wininst --install-script pymca_win_post_install.py 

4 - Creation of an easy to install windows binary using the  MinGW compiler
python setup.py build -c mingw32
python setup.py bdist_wininst --skip-build --install-script pymca_win_post_install.py

You will need:

- Python (at least 2.5.x)

- Numpy

If you want to use the graphical interfaces provided, you will need a running
python installation with:


- PyQt + PyQwt5     NOT GPL UNDER WINDOWS

OR

- PyQt4 + PyQwt5    GPL ON ALL PLATFORMS FROM 3.9.4Qt4 - RECOMMENDED

If you want to embed PyMca in your own PyQt application, I recommend you to use
the McaAdvancedFit.py module. It is very easy to embed. A bit harder, but not so
much would be to embed the McaWindow but you would not gain much more than the
possibility to select ROIs.

PyQt4 + PyQwt5 is the current main development platform for PyMca.

The program will take profit of a matplotlib installation if present in order to
generate publication quality output. Originally I intended to replace PyQwt by
matplotlib, but the degree of interactivity offered by PyQwt is very convenient.

MacOS X users will need malloc.h

DEVELOPMENT PLANS

I had not taken a look at this README since quite long :-)

There are still some tasks left:

- Compound fitting.

- Fit configuration speed up to allow compound and multilayers fitting.

If you have any questions or comments (or contributions!), please feel free to
contact me.

Enjoy,

V. Armando Sole
sole@esrf.fr
